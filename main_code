#include<iostream>
#include<conio.h>
using namespace std;
class library
{
	private:
		struct node
		{
			int id;
			string name,author,publisher;
			node *next_add;
		};
	public:
		node *head= NULL;
		void menu();
		void insert();
		void search();
		void update();
		void dell();
		void sort();
		void show();
};
void library::menu()
{
	p:
		system("cls");
		int choice;
		cout<<"\n\n\t\t\t==========================================================";
		cout<<"\n\n\t\t\t==================LIBRARY MANAGEMENT SYSTEM===============";
		cout<<"\n\n\t\t\t==========================================================";
		cout<<"\n\n 1. insert new record";
		cout<<"\n\n 2. search record";
		cout<<"\n\n 3. update record";
		cout<<"\n\n 4. delete record";
		cout<<"\n\n 5. show all record";
		cout<<"\n\n 6. exit";
		cout<<"\n\n enter the choice :";
		cin>>choice;
		switch(choice)
		{
			case 1:
				insert();
				break;
			case 2:
				search();
				break;
			case 3:
				update();
			    break;
			case 4:
				dell();
				break;
			case 5:
				sort();
				show();
				break;
			case 6:
				exit(0);
			default:
				cout<<"\n\n invalid choice.. please try again";	
		}
		getch();
		goto p;		
}
void library::insert()
{
		system("cls");
		cout<<"\n\n\t\t\t==========================================================";
		cout<<"\n\n\t\t\t==================LIBRARY MANAGEMENT SYSTEM===============";
		cout<<"\n\n\t\t\t==========================================================";
        node *new_node =new node;
        cout<<"\n\n book id:";
        cin>>new_node->id;
        cout<<"\n\n name:";
        cin>>new_node->name;
        cout<<"\n\n author name:";
        cin>>new_node->author;
        cout<<"\n\n publisher name:";
        cin>>new_node->publisher;
        new_node->next_add=NULL;
        if(head==NULL)
        {
        	head=new_node;
		}
		else
		{
			node *ptr=head;
			while(ptr->next_add!=NULL)
			{
				ptr = ptr->next_add;
			}
			ptr->next_add = new_node;
		}
		cout<<"\n\n\t\t\t new book inserted successfully";  
}
 void library::search()
{
 	system("cls");
 	int t_id,found=0;
	cout<<"\n\n\t\t\t==========================================================";
	cout<<"\n\n\t\t\t==================LIBRARY MANAGEMENT SYSTEM===============";
	cout<<"\n\n\t\t\t==========================================================";
	if(head==NULL)
	{
		cout<<"\n\n linked list is empty";
	}
	else
	{
		cout<<"\n\n book id";
		cin>>t_id;
		node *ptr = head;
		while(ptr !=NULL)
		{
			if(t_id==ptr->id)
			{
				system("cls");
	            cout<<"\n\n\t\t\t==========================================================";
             	cout<<"\n\n\t\t\t==================LIBRARY MANAGEMENT SYSTEM===============";
            	cout<<"\n\n\t\t\t==========================================================";
            	cout<<"\n\n book id : "<<ptr->id;
            	cout<<"\n\n book name: "<<ptr->name;
            	cout<<"\n\n author name: "<<ptr->author;
            	cout<<"\n\n publisher name: "<<ptr->publisher;
			    found++;
			}
			ptr = ptr->next_add;
		}
		if(found ==0)
		{
			cout<<"\n\n book id is invalid....";
			
		}
	}
}
void library::update()
{
	system("cls");
 	int t_id,found=0;
	cout<<"\n\n\t\t\t==========================================================";
	cout<<"\n\n\t\t\t==================LIBRARY MANAGEMENT SYSTEM===============";
	cout<<"\n\n\t\t\t==========================================================";
	if(head==NULL)
	{
		cout<<"\n\n linked list is empty.....";
	}
	else
	{
		cout<<"\n\n book id:";
		cin>>t_id;
		node *ptr = head;
		while(ptr !=NULL)
		{
			if(t_id==ptr->id)
			{
				system("cls");
	            cout<<"\n\n\t\t\t==========================================================";
             	cout<<"\n\n\t\t\t==================LIBRARY MANAGEMENT SYSTEM===============";
            	cout<<"\n\n\t\t\t==========================================================";
            	cout<<"\n\n book id : ";
				cin>>ptr->id;
            	cout<<"\n\n book name: ";
				cin>>ptr->name;
            	cout<<"\n\n author name: ";
				cin>>ptr->author;
            	cout<<"\n\n publisher name: ";
				cin>>ptr->publisher;
			    found++;
			    cout<<"\n\n\t\t\t update book successfully";
			}
			ptr = ptr->next_add;
		}
		if(found ==0)
		{
			cout<<"\n\n book id is invalid....";
			
		}
	}
}
void library::dell()
{
	system("cls");
 	int t_id,found=0;
	cout<<"\n\n\t\t\t==========================================================";
	cout<<"\n\n\t\t\t==================LIBRARY MANAGEMENT SYSTEM===============";
	cout<<"\n\n\t\t\t==========================================================";
	if(head==NULL)
	{
		cout<<"\n\n linked list is empty";
	}
	else
	{
		cout<<"\n\n book id:";
		cin>>t_id;
		if(t_id==head->id)
		{
			node *ptr=head;
			head=head->next_add;
			delete ptr;
			cout<<"\n\n delete book successfully";
			found++;
		}
		else
		{
			node *pre=head;
			node *ptr=head;
			while(ptr!=NULL)
			{
				if(t_id==ptr->id)
				{
					pre->next_add->next_add;
					delete ptr;
					cout<<"\n\n delete book successfully";
					found++;
					break;
				}
				pre=ptr;
				ptr=ptr->next_add;
			}
		}
		if(found==0)
		{
			cout<<"\n\n book id is in not found";
		}
	}
}
void library::sort()
{
	
	if(head==NULL)
	{
		system("cls");
		cout<<"\n\n\t\t\t==========================================================";
	    cout<<"\n\n\t\t\t==================LIBRARY MANAGEMENT SYSTEM===============";
     	cout<<"\n\n\t\t\t==========================================================";
		cout<<"\n\n linked list is empty....";
		getch();
		menu();
	}
	int count=0,t_id;
	string t_name,t_author,t_publisher;
	node *ptr=head;
	while(ptr !=NULL)
	{
		count++;
		ptr = ptr->next_add;
	}
	for(int i=1;i<=count;i++)
	{
		node *ptr=head;
		for(int j=1;j<count;j++)
		{
			if(ptr->id>ptr->next_add->id)
			{   
			    //save data into temporary variables
				t_id=ptr->id;
				t_name=ptr->name;
				t_author=ptr->author;
				t_publisher=ptr->publisher;
				//save data into current node
				ptr->id=ptr->next_add->id;
				ptr->name=ptr->next_add->name;
				ptr->author=ptr->next_add->author;
				ptr->publisher=ptr->next_add->publisher;
				//save data into next node
				ptr->next_add->id=t_id;
				ptr->next_add->name=t_name;
				ptr->next_add->author=t_author;
				ptr->next_add->publisher=t_publisher;
			}
			ptr=ptr->next_add;
		}
	}
	
}
void library::show()
{
	system("cls");
	cout<<"\n\n\t\t\t==========================================================";
	cout<<"\n\n\t\t\t==================LIBRARY MANAGEMENT SYSTEM===============";
	cout<<"\n\n\t\t\t==========================================================";
		node *ptr = head;
		while(ptr !=NULL)
		{
           	cout<<"\n\n book id : "<<ptr->id;
           	cout<<"\n\n book name: "<<ptr->name;
           	cout<<"\n\n author name: "<<ptr->author;
           	cout<<"\n\n publisher name: "<<ptr->publisher;
			cout<<"\n\n\n=========================================================";
			ptr = ptr->next_add;
    	}
		
}
main()
{
	library obj;
	obj.menu();
}
